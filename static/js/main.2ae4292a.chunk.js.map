{"version":3,"sources":["Components/Section/Section.js","Components/FeedBackOptions/FeedBackOptions.js","Components/Statistic/Statistic.js","Components/Notification/Notification.js","Components/App.js","index.js","Components/FeedBackOptions/FeedBackOptions.module.css"],"names":["Section","title","children","FeedBackOptions","onLeaveFeedback","className","s","btn","type","onClick","Statistic","stats","total","positivePercentage","good","neutral","bad","Notification","message","App","state","LeaveFeedback","setState","prevState","newState","Math","round","totalFB","this","positiveFeedback","Component","ReactDOM","render","document","querySelector","module","exports"],"mappings":"sQAEe,SAASA,EAAT,GAAoC,IAAlBC,EAAiB,EAAjBA,MAAMC,EAAW,EAAXA,SACnC,OACE,oCACA,4BAAKD,GACJC,G,oBCFQ,SAASC,EAAT,GAA+C,IAApBC,EAAmB,EAAnBA,gBACxC,OACE,oCACE,4BACEC,UAAWC,IAAEC,IACbC,KAAK,SACLC,QAAS,kBAAML,EAAgB,UAHjC,QAOA,4BACEC,UAAWC,IAAEC,IACbC,KAAK,SACLC,QAAS,kBAAML,EAAgB,aAHjC,WAOA,4BACEC,UAAWC,IAAEC,IACbC,KAAK,SACLC,QAAS,kBAAML,EAAgB,SAHjC,QCnBS,SAASM,EAAT,GAA0D,IAArCC,EAAoC,EAApCA,MAAOC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBACxCC,EAAuBH,EAAvBG,KAAMC,EAAiBJ,EAAjBI,QAASC,EAAQL,EAARK,IAEvB,OACE,oCACE,mCAASF,GACT,sCAAYC,GACZ,kCAAQC,GACR,oCAAUJ,GACV,gDAAsBC,EAAtB,MCTS,SAASI,EAAT,GAAkC,IAAXC,EAAU,EAAVA,QAElC,OACE,oCACE,2BAAIA,I,ICCSC,E,4MACnBC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,cAAgB,SAAAb,GACd,EAAKc,UAAS,SAAAC,GACZ,IAAMC,EAAQ,eACXhB,EAAOe,EAAUf,GAAQ,GAE5B,OAAO,2BAAKe,GAAcC,O,EAI9BZ,MAAQ,WAAO,IAAD,EACmB,EAAKQ,MACpC,OAFY,EACJN,KADI,EACEC,QADF,EACWC,K,EAIzBH,mBAAqB,SAAAD,GAAK,OAAIa,KAAKC,MAAO,IAAM,EAAKN,MAAMN,KAAQF,I,uDAGjE,IAAMe,EAAUC,KAAKhB,QACfiB,EAAmBD,KAAKf,mBAAmBc,GACjD,OACE,oCACE,kBAAC3B,EAAD,CAASC,MAAO,yBACd,kBAACE,EAAD,CAAiBC,gBAAiBwB,KAAKP,iBAEzC,kBAACrB,EAAD,CAASC,MAAO,aACI,IAAjB2B,KAAKhB,SACJ,kBAACF,EAAD,CACEC,MAAOiB,KAAKR,MACZR,MAAOe,EACPd,mBAAoBgB,KAIR,IAAjBD,KAAKhB,SACJ,kBAACK,EAAD,CAAcC,QAAQ,2B,GAzCCY,aCHjCC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W,kBCHhDC,EAAOC,QAAU,CAAC,IAAM,gC","file":"static/js/main.2ae4292a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Section({title,children}) {\r\n    return (\r\n      <>\r\n      <h2>{title}</h2>\r\n      {children}\r\n      </>\r\n  \r\n    )\r\n  }","import React from 'react';\r\n\r\nimport s from './FeedBackOptions.module.css';\r\n\r\nexport default function FeedBackOptions({ onLeaveFeedback }) {\r\n  return (\r\n    <>\r\n      <button\r\n        className={s.btn}\r\n        type=\"button\"\r\n        onClick={() => onLeaveFeedback('good')}\r\n      >\r\n        GOOD\r\n      </button>\r\n      <button\r\n        className={s.btn}\r\n        type=\"button\"\r\n        onClick={() => onLeaveFeedback('neutral')}\r\n      >\r\n        Neutral\r\n      </button>\r\n      <button\r\n        className={s.btn}\r\n        type=\"button\"\r\n        onClick={() => onLeaveFeedback('bad')}\r\n      >\r\n        Bad\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Statistic({ stats, total, positivePercentage }) {\r\n  const { good, neutral, bad } = stats;\r\n\r\n  return (\r\n    <>\r\n      <p>Good:{good}</p>\r\n      <p>Neutral:{neutral}</p>\r\n      <p>Bad:{bad}</p>\r\n      <p>Total:{total}</p>\r\n      <p>Positive Feedback:{positivePercentage}%</p>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Notification({message}) {\r\n    \r\n    return (\r\n      <>\r\n        <p>{message}</p>\r\n      </>\r\n  \r\n    )\r\n  }","import React, { Component } from 'react';\r\n\r\nimport Section from './Section/Section.js';\r\nimport FeedBackOptions from './FeedBackOptions/FeedBackOptions.js';\r\nimport Statistic from './Statistic/Statistic.js';\r\nimport Notification from './Notification/Notification.js';\r\n\r\nexport default class App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  LeaveFeedback = type => {\r\n    this.setState(prevState => {\r\n      const newState = {\r\n        [type]: prevState[type] + 1,\r\n      };\r\n      return { ...prevState, ...newState };\r\n    });\r\n  };\r\n\r\n  total = () => {\r\n    const { good, neutral, bad } = this.state;\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  positivePercentage = total => Math.round((100 * this.state.good) / total);\r\n\r\n  render() {\r\n    const totalFB = this.total();\r\n    const positiveFeedback = this.positivePercentage(totalFB);\r\n    return (\r\n      <>\r\n        <Section title={'Please Leave Feedback'}>\r\n          <FeedBackOptions onLeaveFeedback={this.LeaveFeedback} />\r\n        </Section>\r\n        <Section title={'Statistic'}>\r\n          {this.total() !== 0 && (\r\n            <Statistic\r\n              stats={this.state}\r\n              total={totalFB}\r\n              positivePercentage={positiveFeedback}\r\n            />\r\n          )}\r\n        </Section>\r\n        {this.total() === 0 && (\r\n          <Notification message=\"No feedback given\"></Notification>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App.js';\n\nReactDOM.render(<App />, document.querySelector('#root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedBackOptions_btn__X2GHL\"};"],"sourceRoot":""}